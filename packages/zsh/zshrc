# If you come from bash you might have to change your $PATH.
export PATH="$HOME/bin:/usr/local/bin:$PATH"
export PATH="${PATH}:/home/raytung/.local/bin"

# Path to your oh-my-zsh installation.
export ZSH="/home/raytung/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker kubectl)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
export SSH_KEY_PATH="~/.ssh/id_rsa"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# export PATH="$HOME/.cargo/bin:$PATH"

export GOPATH="${HOME}"
export PATH="${PATH}:${HOME}/src/github.com/raytung/dotfiles/bin"
export PATH="${PATH}:${GOPATH}/bin"

export VISUAL=vim
export EDITOR="$VISUAL"

if ps -p "${SSH_AGENT_PID}" > /dev/null; then
  echo "SSH agent is already running"
else
  eval "$(ssh-agent)"
fi

kubecluster() {
  echo "Current context is $(kubectl config current-context)"
  echo -e "\nSelect context to change to:\n"
  select context in $(kubectl config get-contexts --no-headers=true -o name); do
    echo
    echo "Setting context to ${context}"
    kubectl config use-context "${context}"
    break
  done
}

gproj() {
  echo "Current project is $(gcloud config list --format "get(core.project)")"
  echo -e "\nSelect project:\n"
  select project in $(gcloud projects list --format "get(project_id)"); do
    echo
    echo "Setting project to ${project}"
    gcloud config set project "${project}"
    break
  done
}

reload() {
  source ~/.zshrc
}

aws-creds() {
  local profile="$1"
  local id="$(aws configure get aws_access_key_id --profile "${profile}")"
  if [ "${id}" = "" ]; then
    echo "Unable to get aws access key id"
    exit 1
  fi

  local key="$(aws configure get aws_secret_access_key --profile "${profile}")"
  if [ "${key}" = "" ]; then
    echo "Unable to get aws secret access key"
    exit 1
  fi

  export AWS_ACCESS_KEY_ID="${id}"
  export AWS_SECRET_ACCESS_KEY="${key}"
}

source ~/.zshrc.private
eval $(thefuck --alias crap)
